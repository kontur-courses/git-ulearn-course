<?xml version="1.0"?>
<slide id="4a1c3c8a-36ba-4b0e-8d17-330f457da4d7" title="Конфликты при rebase" xmlns="https://ulearn.me/schema/v2">
  <youtube>dYEutOH_dXA</youtube>
  <markdown>
    При rebase коммиты обрабатываются по одному, причем перенос каждого коммита может породить конфликт.
  </markdown>
  <galleryImages>
    <image>img\rebase-conflict.png</image>
  </galleryImages>
  <html><br/></html>
  <markdown>
    Конфликты разрешаются аналогично merge: надо найти все конфликты, разрешить их и закоммитить результат.

    Затем можно продолжать rebase с помощью команды `git rebase --continue`.

    Если конфликтов слишком много или пришло понимание, что rebase не нужен — его можно остановить
    командой `git rebase --abort`.
  </markdown>

  <markdown>
    ### Current и Incoming

    При разрешении конфликтов есть инвариант: HEAD указывает на current, другая ветка — это incoming.
    Это уже обсуждалось в случае разрешения конфликтов при слиянии.

    После начала rebase, HEAD перемещается на коммит построения новой истории.
    Поэтому, если с помощью rebase в основную ветку `main` добавляются изменения ветки с новым функционалом `f`,
    то incoming будет указывать на новый функционал. 
  </markdown>
  <galleryImages>
    <image>img\rebase-incoming1.png</image>
    <image>img\rebase-incoming2.png</image>
  </galleryImages>
  <html><br/></html>

  <markdown>
    Это аналогично влитию ветки `f` в основную ветку `main`: там тоже incoming будет указывать на новый функционал.
  </markdown>
  <galleryImages>
    <image>img\merge-incoming.png</image>
  </galleryImages>
  <html><br/></html>

  <markdown>
    Разница только в том, на какую ветку надо перейти перед началом операции.

    В случае rebase — на ветку с новым функционалом:
    ```
    git checkout f  
    git rebase main
    ```

    В случае merge — на основную ветку:
    ```
    git checkout main  
    git merge f
    ```  
  </markdown>

  <markdown>
    ### Rebase при одинаковых изменениях

    Будет ли конфликт при rebase одной ветки на другую, если в каждой из них были внесены одинаковые изменения?
    На рисунке ниже эта ситуация обозначена коммитами 3 и 3'.
  </markdown>
  <galleryImages>
    <image>img\rebase-same1.png</image>
    <image>img\rebase-same2.png</image>
    <image>img\rebase-same3.png</image>
  </galleryImages>
  <html><br/></html>
  <markdown>
    Оказывается, что если коммиты 2 и 3 не пересекались по изменениям, то конфликта не будет!
    Более того, нового коммита 3' выше 2 тоже не будет, т.к. все изменения из него уже есть в «базе».
  </markdown>
</slide>
