<?xml version="1.0"?>
<slide id="f68fc68e-adb4-4e0a-9588-7d8912d4ef95" title="Обзор" xmlns="https://ulearn.me/schema/v2">
  <youtube>dYEutOH_dXA</youtube>
  <markdown>
    ### Мотивация пересоздавать историю

    - Исправить неудачное название коммита
    - Добавить забытые изменения
    - Убрать лишние изменения
    - Выстроить изменения от разных разработчиков в линию
    - Убрать лишние «эксперименты» и «метания» из истории
    - Получить некоторые изменения из другой ветки


    ### Почему пересоздавать, а не исправлять
    
    Даже если кажется, что Git редактирует коммит, например,
    у коммита просто меняется сообщение, на самом деле он создает новый коммит.
    Просто после очередной «операции» все ссылки начинают указывать на новый коммит,
    а старые коммиты остаются без ссылок и, как следствие, скрываются.

    Зачем же создавать новые коммиты?

    - С одной стороны — это осообенность реализации системы контроля версий под названием Git.
    Любое изменение сообщения коммита или изменения в файлах внутри коммита приводит к изменению хэша коммита.
    А так как хэш используется в качестве идентификатора коммита, то и коммит получается новый.
    - С другой стороны, использование хэша в качестве идентификатора и создание новых коммитов
    при любом изменении — это осознанное архитектурное решение, которое упрощает обмен коммитами между разными репозиториями:
    есть уверенность, что при совпадении идентификаторов совпадает содержимое.

    **Нельзя переписать историю — можно только создать новую**

  </markdown>
</slide>
